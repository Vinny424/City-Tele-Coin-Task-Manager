services:
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskmanager-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d taskmanager"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend/TaskManager.API
      dockerfile: Dockerfile
    container_name: taskmanager-api
    ports:
      - "5001:5001"
    # This is modified to wait for the postgres service to be 'healthy'.
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - Jwt__Secret=${JWT_SECRET}
    networks:
      - taskmanager-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - taskmanager-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  taskmanager-network:
    driver: bridge
